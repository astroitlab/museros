# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_imagertask', [dirname(__file__)])
        except ImportError:
            import _imagertask
            return _imagertask
        if fp is not None:
            try:
                _mod = imp.load_module('_imagertask', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _imagertask = swig_import_helper()
    del swig_import_helper
else:
    import _imagertask
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class imagertask(_object):
    """Proxy of C++ casac::imagertask class"""
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, imagertask, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, imagertask, name)
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(self) -> imagertask"""
        this = _imagertask.new_imagertask()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _imagertask.delete_imagertask
    __del__ = lambda self : None;
    def clean(self, *args, **kwargs):
        """
        clean(self, vis=string("Unknown"), alg=string("clark"), niter=1000, gain=0.1, threshold=0.0, 
            residual=std::vector< string >(1, ""), image=std::vector< string >(1, ""), 
            model=std::vector< string >(1, ""), mask=std::vector< string >(1, ""), mode=string(""), 
            nchan=initialize_vector(1, (int)1), start=initialize_vector(1, (int)1), 
            width=initialize_vector(1, (int)1), step=initialize_vector(1, (int)1), 
            imsize=initialize_vector(2,(int)128, (int)128), cell=initialize_vector(2,(int)1, (int)1), 
            stokes=string("I"), fieldid=initialize_vector(1, (int)1), 
            spwid=initialize_vector(1, (int)1), weighting=string("uniform"), rmode=string("none"), 
            robust=0.0)

        Summary
        	Perform clean operations

        Description
        	Form images from visibilities. Handles continuum and spectral line cubes.

        Input Parameters:
        	vis		 name of input visibility file (MS) Unknown 
        	alg		 Algorithm to use (clark, hogbom, csclean, csfast). Default is clark. clark 
        	niter		 Number of iterations. Default=1000. 1000 
        	gain		 The minor iteration loop gain. Default is 0.1. 0.1 
        	threshold	 Threshold flux level at which to stop cleaning (in Jy). Default is 0.Jy. 0.0 
        	residual	 name of residual image. Default is model name concatenated with '.residual'. residual 
        	image		 name of restored image. Default is model name concatenated with '.restored'. restored 
        	model		 name of model image. No value. 
        	mask		 name of mask image. No value. 
        	mode		 Type of processing (channel or velocity) 
        	nchan		 With mode, this defines the number of channels for mapping of visibilities to image channels 1 
        	start		 With mode, this defines the starting channel for mapping of visibilities to image channels 1 
        	width		 With mode, this defines the width of channels for mapping of visibilities to image channels 1 
        	step		 With mode, this defines the step of channels for mapping of visibilities to image channels 1 
        	imsize		 The size of the output image (pixels). 128 128 
        	cell		 The image cell size (arcseconds). 1 1 
        	stokes		 Stokes params to image. Default is 'I'. Allowed: I, IV, IQU, IQUV I 
        	fieldid		 Field IDs to include. Default is 1. Allows a vector of available field ids. 1 
        	spwid		 Spectral Window IDs to include. Default is 1. Allows a vector of available spectral window ids. 1 
        	weighting	 Type of weighting (natural, uniform, briggs, radial). Default is uniform. uniform 
        	rmode		 Mode of Briggs weighting ('norm', 'abs', 'none'). Default is 'none'. none 
        	robust		 Parameter in briggs weighting. Range -2.0 to 2.0. Default is 0.0. 0.0 
        	
        Example:
        	
        --------------------------------------------------------------------------------
        	      
        """
        return _imagertask.imagertask_clean(self, *args, **kwargs)

    def feather(self, *args, **kwargs):
        """
        feather(self, vis=string(""), featherimage=string(""), highres=string(""), lowres=string(""), lowpsf=string(""))

        Summary
        	Perform feather operation

        Description
        	Feather an interferometer and single dish image in the Fourier plane

        Input Parameters:
        	vis		 name of input visibility file (MS) 
        	featherimage	 name of output image 
        	highres		 name of high resolution (interferometer) image 
        	lowres		 name of low resolution (single dish) image 
        	lowpsf		 image of the single dish beam 
        	
        Example:
        	
        --------------------------------------------------------------------------------
        	      
        """
        return _imagertask.imagertask_feather(self, *args, **kwargs)

    def invert(self, *args, **kwargs):
        """
        invert(self, vis=string(""), map=string(""), beam=string(""), mode=string(""), nchan=initialize_vector(1, (int)1), 
            start=initialize_vector(1, (int)1), width=initialize_vector(1, (int)1), 
            step=initialize_vector(1, (int)1), imsize=initialize_vector(2,(int)128, (int)128), 
            cell=initialize_vector(2,(int)1, (int)1), stokes=string("I"), 
            fieldid=initialize_vector(1, (int)1), spwid=initialize_vector(1, (int)1), 
            weighting=string("uniform"), rmode=string("none"), robust=0.0)

        Summary
        	Perform invert operation

        Description
        	Form images from visibilities. Handles continuum and spectral line

        Input Parameters:
        	vis		 name of input visibility file (MS) 
        	map		 name of output dirty map (image) 
        	beam		 name of output beam file (image) 
        	mode		 Type of processing (channel or velocity) 
        	nchan		 With mode, this defines the number of channels for mapping of visibilities to image channels 1 
        	start		 With mode, this defines the starting channel for mapping of visibilities to image channels 1 
        	width		 With mode, this defines the width of channels for mapping of visibilities to image channels 1 
        	step		 With mode, this defines the step of channels for mapping of visibilities to image channels 1 
        	imsize		 The size of the output image (pixels). 128 128 
        	cell		 The image cell size (arcseconds). 1 1 
        	stokes		 Stokes params to image. Default is 'I'. Allowed: I, IV, IQU, IQUV I 
        	fieldid		 Field IDs to include. Default is 1. Allows a vector of available field ids. 1 
        	spwid		 Spectral Window IDs to include. Default is 1. Allows a vector of available spectral window ids. 1 
        	weighting	 Type of weighting (natural, uniform, briggs, radial). Default is uniform. uniform 
        	rmode		 Mode of Briggs weighting ('norm', 'abs', 'none'). Default is 'none'. none 
        	robust		 Parameter in briggs weighting. Range -2.0 to 2.0. Default is 0.0. 0.0 
        	
        Example:
        	
        --------------------------------------------------------------------------------
        	      
        """
        return _imagertask.imagertask_invert(self, *args, **kwargs)

    def mosaic(self, *args, **kwargs):
        """
        mosaic(self, vis=string(""), alg=string("mfclark"), niter=1000, gain=0.1, threshold=0.0, residual=std::vector< string >(1, ""), 
            image=std::vector< string >(1, ""), model=std::vector< string >(1, ""), 
            mask=std::vector< string >(1, ""), mode=string(""), 
            gridfn=string("SF"), grid=string("mosaic"), nchan=initialize_vector(1, (int)1), 
            start=initialize_vector(1, (int)1), width=initialize_vector(1, (int)1), 
            step=initialize_vector(1, (int)1), imsize=initialize_vector(2,(int)128, (int)128), 
            cell=initialize_vector(2,(int)1, (int)1), stokes=string("I"), 
            fieldid=initialize_vector(1, (int)1), reffieldid=1, spwid=initialize_vector(1, (int)1), 
            weighting=string("uniform"), mosweight=string("T"), rmode=string("none"), 
            robust=0.0, minpb=0.1, scaletype=string("NONE"), stoplargenegatives=-1, 
            cyclefactor=1.5, cyclespeedup=2.0)

        Summary
        	Perform mosaic operation

        Description
        	Form images from multi-field visibilities. Handles continuum and spectral line cubes.

        Input Parameters:
        	vis		 name of input visibility file (MS) 
        	alg		 Algorithm to use (mfclark,mfhogbom). Default is 'mfclark'. mfclark 
        	niter		 Number of iterations. Default=1000. 1000 
        	gain		 The minor iteration loop gain. Default is 0.1. 0.1 
        	threshold	 Threshold flux level at which to stop cleaning (in Jy). Default is 0.Jy. 0.0 
        	residual	 name of residual image. Default is model name concatenated with '.residual'. residual 
        	image		 name of restored image. Default is model name concatenated with '.restored'. restored 
        	model		 name of model image. No value. 
        	mask		 name of mask image. No value. 
        	mode		 Type of processing (channel or velocity) 
        	gridfn		 Type of gridding function (spheroidal wave, box car, primary beam SF 
        	grid		 Type of gridding mosaic or ft (standard interferometry) mosaic 
        	nchan		 With mode, this defines the number of channels for mapping of visibilities to image channels 1 
        	start		 With mode, this defines the starting channel for mapping of visibilities to image channels 1 
        	width		 With mode, this defines the width of channels for mapping of visibilities to image channels 1 
        	step		 With mode, this defines the step of channels for mapping of visibilities to image channels 1 
        	imsize		 The size of the output image (pixels). 128 128 
        	cell		 The image cell size (arcseconds). 1 1 
        	stokes		 Stokes params to image. Default is 'I'. Allowed: I, IV, IQU, IQUV I 
        	fieldid		 Field IDs to include. Default is 1. Allows a vector of available field ids. 1 
        	reffieldid	 Reference Field IDs to use. Default is 1. 1 
        	spwid		 Spectral Window IDs to include. Default is 1. Allows a vector of available spectral window ids. 1 
        	weighting	 Type of weighting (natural, uniform, briggs, radial). Default is uniform. uniform 
        	mosweight	 Type of weighting used for the mosaic. T means that each field will be weighted individually. T 
        	rmode		 Mode of Briggs weighting ('norm', 'abs', 'none'). Default is 'none'. none 
        	robust		 Parameter in briggs weighting. Range -2.0 to 2.0. Default is 0.0. 0.0 
        	minpb		 Minimum PB level to use. Default is 0.1. 0.1 
        	scaletype	 Image plane flux scale type ('NONE', 'SAULT'). Default is 'NONE'. NONE 
        	stoplargenegatives	 Stop large negatives. Default=-1. -1 
        	cyclefactor	 Cycle factor. Default=1.5. 1.5 
        	cyclespeedup	 Cycle speedup. Default=2. 2.0 
        	
        Example:
        	
        --------------------------------------------------------------------------------
        	      
        """
        return _imagertask.imagertask_mosaic(self, *args, **kwargs)

imagertask_swigregister = _imagertask.imagertask_swigregister
imagertask_swigregister(imagertask)

# This file is compatible with both classic and new-style classes.


