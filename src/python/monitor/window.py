# coding=utf-8from PyQt4 import QtGuifrom PyQt4 import QtCoreimport layoutPanelimport queueMsgfrom env import *class MainWindow(QtGui.QMainWindow):    def __init__(self, imageType, point):        self.env = ENV()        self.PageAction = []        super(MainWindow, self).__init__()        self.imageType = imageType        queueMsg.SIGNAL_PARA = self.imageType + '_L1'        self.initUI()        screen = QtGui.QDesktopWidget().screenGeometry()  #获取屏幕显示窗口大小        self.resize(screen.width(), screen.height())  #重定义窗体大小        self.move(point.x(), point.y())        self.showMaximized()    def initUI(self):        self.setWindowTitle(self.imageType)        self.alignmentGroup = QtGui.QActionGroup(self)        self.createActions()        self.createToolBars()        self.Page1()    def createActions(self):        Pol = ['L', 'R']        for i in range(0, ENV.SubChannels):            self.PageAction.append(QtGui.QAction(self.tr(Pol[i % 2] + str(i // 2 +1)), self))            self.PageAction[i].setStatusTip(self.tr(self.tr(Pol[i % 2] + str(i // 2 +1))))            self.PageAction[i].setCheckable(True)            self.connect(self.PageAction[i], QtCore.SIGNAL("triggered()"), self.sendSlot)        self.Page9Action = QtGui.QAction(self.tr("All"), self)        self.Page9Action.setStatusTip(self.tr("All"))        self.Page9Action.setCheckable(True)        self.connect(self.Page9Action, QtCore.SIGNAL("triggered()"), self.sendSlotAll)        self.exitAction = QtGui.QAction(QtGui.QIcon("../image/quit.png"), self.tr("Quit"), self)        self.exitAction.setShortcut("Ctrl+Q")        self.exitAction.setStatusTip(self.tr("Quit"))        self.connect(self.exitAction, QtCore.SIGNAL("triggered()"), self.close)        self.statusBar()  #设置状态栏    def sendSlot(self):        sender = self.sender()        vistest = sender.text()        if vistest[:1]=="L":            queueMsg.visPolarition = 0        else:            queueMsg.visPolarition = 1        queueMsg.visBand = int(vistest[1:2])        queueMsg.SIGNAL_PARA = self.imageType + sender.text()    def sendSlotAll(self):        queueMsg.SIGNAL_PARA = self.imageType + '_ALL'        print queueMsg.SIGNAL_PARA    def createToolBars(self):        for i in range(0, ENV.SubChannels):            self.alignmentGroup.addAction(self.PageAction[i])        page = self.addToolBar(self.tr("LeftPage"))        for i in range(0, ENV.SubChannels):            page.addAction(self.PageAction[i])        # page = self.addToolBar(self.tr("RightPage"))        # for i in range(1, ENV.SubChannels,2):        #     page.addAction(self.PageAction[i])        page = self.addToolBar(self.tr("AllPage"))        page.addAction(self.Page9Action)    def Page1(self):        centerWidget = layoutPanel.LayoutPanel(self.width(), self.height(), self.imageType)        self.setCentralWidget(centerWidget)           