#coding=utf-8'''Created on 2014年7月23日@author: Ruyao KenShin'''import sysimport mathimport osfrom PyQt4 import QtGui, QtCoreclass ImageCell(QtGui.QWidget):    def __init__(self,id):        super(ImageCell, self).__init__()                self.id = id        self.status = 0        self.path = ''        self.fileInfo = ''        self.showStatus = True        self.selected = False        self.maxSize = False        self.isHightlight = False        self.image = QtGui.QImage()        self.initAttrib()         def initAttrib(self):        self.name_font = QtGui.QFont()        self.bg_color = QtGui.QColor(50, 50, 50)        self.hightlight = QtGui.QColor(255, 255, 255, 100)        self.edge_size = 5        self.pen_selected = QtGui.QPen(QtGui.QColor(255, 255, 0))        self.pen_selected.setWidth(self.edge_size)         self.pen_selected.setJoinStyle(QtCore.Qt.MiterJoin)            def setImage(self,image):                   self.image = QtGui.QImage(image)            self.repaint()            return True            def paintAsimage(self, painter):        if self.image != None:            # draw background            painter.fillRect(self.rect(), self.bg_color)            painter.drawImage(self.rect(), self.image)            # draw hightlight        if self.isHightlight and not self.selected:            painter.fillRect(self.rect(), self.hightlight)        if self.status:            painter.setPen(QtCore.Qt.NoPen)            painter.fillRect(0, 0, self.width(), self.width(), QtGui.QColor(40, 40, 40, 40))            if self.status == 1:                painter.setBrush(QtGui.QBrush(QtGui.QColor(255, 0, 0)))            elif self.status == 2:                painter.setBrush(QtGui.QBrush(QtGui.QColor(0, 255, 0)))            elif self.status == 3:                painter.setBrush(QtGui.QBrush(QtGui.QColor(0, 0, 255)))                        if self.selected:            painter.setPen(self.pen_selected)            painter.setBrush(QtCore.Qt.NoBrush)            painter.drawRect(self.edge_size/2, self.edge_size/2,self.width() - self.edge_size, self.height() - self.edge_size)            def paintEvent(self, event):        painter = QtGui.QPainter(self)        self.paintAsimage(painter)            def mouseReleaseEvent(self, event):        if event.button() == QtCore.Qt.LeftButton:            self.setSelected()            self.emit(QtCore.SIGNAL('selectWidget(PyQt_PyObject)'),self.id)        if event.button() == QtCore.Qt.RightButton:            self.cancelSelected()      def mouseDoubleClickEvent(self, event):         self.doubleClick()           def enterEvent(self, event):        self.isHightlight = True        self.repaint()        self.getFileInfo()     def leaveEvent(self, event):        self.isHightlight = False        self.repaint()         def setSelected(self):        self.selected = True        self.repaint()             def cancelSelected(self):        self.selected = False        self.repaint()         def onWidgetClicked(self):        print 'on widget clicked'            def getFileInfo(self):        size = self.image.size()        self.setStatusTip(u"大小："+str(size.height())+"x"+str(size.width())+","+str(self.image.numBytes()/1024)+"K")        def doubleClick(self):        self.emit(QtCore.SIGNAL('doubleClick(PyQt_PyObject)'),self.id)